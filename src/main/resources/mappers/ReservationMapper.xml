<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xidian.meetingroom.mapper.ReservationMapper">
  <resultMap id="BaseResultMap" type="cn.xidian.meetingroom.model.Reservation">
    <id column="reservation_id" jdbcType="INTEGER" property="reservationId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="meeting_room_id" jdbcType="INTEGER" property="meetingRoomId" />
    <result column="meeting_date" jdbcType="DATE" property="meetingDate" />
    <result column="start_time" jdbcType="TIME" property="startTime" />
    <result column="end_time" jdbcType="TIME" property="endTime" />
    <result column="participant_count" jdbcType="INTEGER" property="participantCount" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="approval_time" jdbcType="TIMESTAMP" property="approvalTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.xidian.meetingroom.model.ReservationWithBLOBs">
    <result column="meeting_subject" jdbcType="LONGVARCHAR" property="meetingSubject" />
    <result column="rejection_reason" jdbcType="LONGVARCHAR" property="rejectionReason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reservation_id, user_id, meeting_room_id, meeting_date, start_time, end_time, participant_count, 
    status, created_time, updated_time, approval_time
  </sql>
  <sql id="Blob_Column_List">
    meeting_subject, rejection_reason
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.xidian.meetingroom.model.ReservationExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Reservation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.xidian.meetingroom.model.ReservationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Reservation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Reservation
    where reservation_id = #{reservationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Reservation
    where reservation_id = #{reservationId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xidian.meetingroom.model.ReservationExample">
    delete from Reservation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xidian.meetingroom.model.ReservationWithBLOBs">
    <selectKey keyProperty="reservationId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into Reservation (user_id, meeting_room_id, meeting_date, 
      start_time, end_time, participant_count, 
      status, created_time, updated_time, 
      approval_time, meeting_subject, rejection_reason
      )
    values (#{userId,jdbcType=INTEGER}, #{meetingRoomId,jdbcType=INTEGER}, #{meetingDate,jdbcType=DATE}, 
      #{startTime,jdbcType=TIME}, #{endTime,jdbcType=TIME}, #{participantCount,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{approvalTime,jdbcType=TIMESTAMP}, #{meetingSubject,jdbcType=LONGVARCHAR}, #{rejectionReason,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.xidian.meetingroom.model.ReservationWithBLOBs">
    <selectKey keyProperty="reservationId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into Reservation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="meetingRoomId != null">
        meeting_room_id,
      </if>
      <if test="meetingDate != null">
        meeting_date,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="participantCount != null">
        participant_count,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="approvalTime != null">
        approval_time,
      </if>
      <if test="meetingSubject != null">
        meeting_subject,
      </if>
      <if test="rejectionReason != null">
        rejection_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="meetingRoomId != null">
        #{meetingRoomId,jdbcType=INTEGER},
      </if>
      <if test="meetingDate != null">
        #{meetingDate,jdbcType=DATE},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIME},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIME},
      </if>
      <if test="participantCount != null">
        #{participantCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvalTime != null">
        #{approvalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meetingSubject != null">
        #{meetingSubject,jdbcType=LONGVARCHAR},
      </if>
      <if test="rejectionReason != null">
        #{rejectionReason,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xidian.meetingroom.model.ReservationExample" resultType="java.lang.Long">
    select count(*) from Reservation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Reservation
    <set>
      <if test="row.reservationId != null">
        reservation_id = #{row.reservationId,jdbcType=INTEGER},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=INTEGER},
      </if>
      <if test="row.meetingRoomId != null">
        meeting_room_id = #{row.meetingRoomId,jdbcType=INTEGER},
      </if>
      <if test="row.meetingDate != null">
        meeting_date = #{row.meetingDate,jdbcType=DATE},
      </if>
      <if test="row.startTime != null">
        start_time = #{row.startTime,jdbcType=TIME},
      </if>
      <if test="row.endTime != null">
        end_time = #{row.endTime,jdbcType=TIME},
      </if>
      <if test="row.participantCount != null">
        participant_count = #{row.participantCount,jdbcType=INTEGER},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=VARCHAR},
      </if>
      <if test="row.createdTime != null">
        created_time = #{row.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedTime != null">
        updated_time = #{row.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.approvalTime != null">
        approval_time = #{row.approvalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.meetingSubject != null">
        meeting_subject = #{row.meetingSubject,jdbcType=LONGVARCHAR},
      </if>
      <if test="row.rejectionReason != null">
        rejection_reason = #{row.rejectionReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update Reservation
    set reservation_id = #{row.reservationId,jdbcType=INTEGER},
      user_id = #{row.userId,jdbcType=INTEGER},
      meeting_room_id = #{row.meetingRoomId,jdbcType=INTEGER},
      meeting_date = #{row.meetingDate,jdbcType=DATE},
      start_time = #{row.startTime,jdbcType=TIME},
      end_time = #{row.endTime,jdbcType=TIME},
      participant_count = #{row.participantCount,jdbcType=INTEGER},
      status = #{row.status,jdbcType=VARCHAR},
      created_time = #{row.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{row.updatedTime,jdbcType=TIMESTAMP},
      approval_time = #{row.approvalTime,jdbcType=TIMESTAMP},
      meeting_subject = #{row.meetingSubject,jdbcType=LONGVARCHAR},
      rejection_reason = #{row.rejectionReason,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Reservation
    set reservation_id = #{row.reservationId,jdbcType=INTEGER},
      user_id = #{row.userId,jdbcType=INTEGER},
      meeting_room_id = #{row.meetingRoomId,jdbcType=INTEGER},
      meeting_date = #{row.meetingDate,jdbcType=DATE},
      start_time = #{row.startTime,jdbcType=TIME},
      end_time = #{row.endTime,jdbcType=TIME},
      participant_count = #{row.participantCount,jdbcType=INTEGER},
      status = #{row.status,jdbcType=VARCHAR},
      created_time = #{row.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{row.updatedTime,jdbcType=TIMESTAMP},
      approval_time = #{row.approvalTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xidian.meetingroom.model.ReservationWithBLOBs">
    update Reservation
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="meetingRoomId != null">
        meeting_room_id = #{meetingRoomId,jdbcType=INTEGER},
      </if>
      <if test="meetingDate != null">
        meeting_date = #{meetingDate,jdbcType=DATE},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIME},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIME},
      </if>
      <if test="participantCount != null">
        participant_count = #{participantCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvalTime != null">
        approval_time = #{approvalTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meetingSubject != null">
        meeting_subject = #{meetingSubject,jdbcType=LONGVARCHAR},
      </if>
      <if test="rejectionReason != null">
        rejection_reason = #{rejectionReason,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where reservation_id = #{reservationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.xidian.meetingroom.model.ReservationWithBLOBs">
    update Reservation
    set user_id = #{userId,jdbcType=INTEGER},
      meeting_room_id = #{meetingRoomId,jdbcType=INTEGER},
      meeting_date = #{meetingDate,jdbcType=DATE},
      start_time = #{startTime,jdbcType=TIME},
      end_time = #{endTime,jdbcType=TIME},
      participant_count = #{participantCount,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      approval_time = #{approvalTime,jdbcType=TIMESTAMP},
      meeting_subject = #{meetingSubject,jdbcType=LONGVARCHAR},
      rejection_reason = #{rejectionReason,jdbcType=LONGVARCHAR}
    where reservation_id = #{reservationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xidian.meetingroom.model.Reservation">
    update Reservation
    set user_id = #{userId,jdbcType=INTEGER},
      meeting_room_id = #{meetingRoomId,jdbcType=INTEGER},
      meeting_date = #{meetingDate,jdbcType=DATE},
      start_time = #{startTime,jdbcType=TIME},
      end_time = #{endTime,jdbcType=TIME},
      participant_count = #{participantCount,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      approval_time = #{approvalTime,jdbcType=TIMESTAMP}
    where reservation_id = #{reservationId,jdbcType=INTEGER}
  </update>
    <resultMap id="ReservationResultMap" type="Reservation">
        <id column="reservation_id" property="reservationId" />
        <result column="user_id" property="userId" />
        <result column="meeting_room_id" property="meetingRoomId" />
        <result column="meeting_date" property="meetingDate" />
        <result column="start_time" property="startTime" />
        <result column="end_time" property="endTime" />
        <result column="participant_count" property="participantCount" />
        <result column="meeting_subject" property="meetingSubject" />
        <result column="status" property="status" />
        <result column="created_time" property="createdTime" />
        <result column="rejection_reason" property="rejectionReason" />
        <result column="approval_time" property="approvalTime" />
    </resultMap>

    <select id="selectReservationById" resultMap="ReservationResultMap">
        SELECT * FROM Reservation WHERE reservation_id = #{reservationId}
    </select>

    <select id="selectReservationsByUserId" resultMap="ReservationResultMap">
        SELECT * FROM Reservation WHERE user_id = #{userId}
        ORDER BY meeting_date DESC, start_time DESC
    </select>

    <select id="selectReservationsByMeetingRoomId" resultMap="ReservationResultMap">
        SELECT * FROM Reservation WHERE meeting_room_id = #{meetingRoomId}
        ORDER BY meeting_date DESC, start_time DESC
    </select>

    <select id="selectReservationsByDateRange" resultMap="ReservationResultMap">
        SELECT * FROM Reservation 
        WHERE meeting_room_id = #{meetingRoomId}
        AND meeting_date BETWEEN #{startDate} AND #{endDate}
        ORDER BY meeting_date, start_time
    </select>

    <insert id="insertReservation" parameterType="Reservation">
        INSERT INTO Reservation (
            user_id,
            meeting_room_id,
            meeting_date,
            start_time,
            end_time,
            participant_count,
            meeting_subject,
            status,
            created_time
        ) VALUES (
            #{userId},
            #{meetingRoomId},
            #{meetingDate},
            #{startTime},
            #{endTime},
            #{participantCount},
            #{meetingSubject},
            #{status},
            #{createdTime}
        )
    </insert>

    <update id="updateReservation" parameterType="Reservation">
        UPDATE Reservation 
        <set>
            <if test="meetingDate != null">meeting_date = #{meetingDate},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="participantCount != 0">participant_count = #{participantCount},</if>
            <if test="meetingSubject != null">meeting_subject = #{meetingSubject},</if>
            <if test="status != null">status = #{status},</if>
            <if test="rejectionReason != null">rejection_reason = #{rejectionReason},</if>
            <if test="approvalTime != null">approval_time = #{approvalTime}</if>
        </set>
        WHERE reservation_id = #{reservationId}
    </update>

    <delete id="deleteReservation">
        DELETE FROM Reservation WHERE reservation_id = #{reservationId}
    </delete>
</mapper>